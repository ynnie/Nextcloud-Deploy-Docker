version: '3'

services:
  db:
    image: postgres:alpine
    container_name: nc_db
    restart: always
    volumes:
      - ${DATA_DIR_DB}:/var/lib/postgresql/data
    env_file:
      - db.env
      
  redis:
    image: redis:alpine
    container_name: nc_redis
    restart: always

  app:
    image: nextcloud:fpm-alpine
    container_name: nc_app
    restart: always
    volumes:
      - ${DATA_DIR_APP}:/var/www/html
    environment:
      - POSTGRES_HOST=db
      - REDIS_HOST=redis
    env_file:
      - db.env
    depends_on:
      - db
      - redis

  web:
    build: ./web
    container_name: nc_web
    restart: always
    volumes:
      - ${DATA_DIR_APP}:/var/www/html:ro
    environment:
      - VIRTUAL_HOST=${HOST_NAME}
    depends_on:
      - app
    networks:
      - proxy_tier
      - default

  proxy:
    build: ./proxy
    container_name: nc_proxy
    restart: always
    ports:
      - 80:80
      - 443:443
    volumes:
      - ${DATA_DIR_CERT}:/etc/nginx/certs:ro
      - ${DATA_DIR_VHOST}:/etc/nginx/vhost.d
      - ${DATA_DIR_HTML}:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - proxy_tier
      
  cron:
    image: nextcloud:fpm-alpine
    container_name: nc_cron
    restart: always
    volumes:
      - ${DATA_DIR_APP}:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - db
      - redis

networks:
  proxy_tier:
